version: '3.9'
services:
  frontend:
    image: twitter-clone-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`app.localhost`)'
      - 'traefik.http.routers.frontend.entrypoints=web'
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    ports:
      - 3001:3001
    networks:
      - app_network

  backend:
    image: twitter-clone-backend
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      # NODE_ENV: "production"
      - MONGODB_CONNECTION_STRING=mongodb://mongo:27017/Twitter
      - FRONTEND_BASE_PATH=http://${DOMAIN:-app.localhost}
      - BACKEND_BASE_PATH=http://${DOMAIN:-app.localhost}/api
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`api.app.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/socket`))'
      # - 'traefik.http.routers.backend.middlewares=backend-stripprefix@docker'
      - 'traefik.http.routers.backend.entrypoints=web'
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - mongo  # Ensures Mongo starts before the backend
    networks:
      - app_network

  mongo:
    image: mongo
    ports:
      - 27017:27017
    restart: unless-stopped
    networks:
      - app_network

  load-balancer:
    image: traefik:v3.2
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--providers.docker.exposedbydefault=false'
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
